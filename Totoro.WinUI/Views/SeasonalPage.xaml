<views:SeasonalPageBase
    x:Class="Totoro.WinUI.Views.SeasonalPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="using:Totoro.Core.Models"
    xmlns:ctk="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:loadingviews="using:Totoro.WinUI.LoadingViews"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:root="using:Totoro.WinUI"
    xmlns:uc="using:Totoro.WinUI.UserControls"
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    xmlns:views="using:Totoro.WinUI.Views"
    x:Name="Page"
    Margin="{ThemeResource MediumLeftRightMargin}"
    mc:Ignorable="d">

    <views:SeasonalPageBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/RadioButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </views:SeasonalPageBase.Resources>

    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Margin="0,0,0,12" HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ctk:Segmented
                Margin="{StaticResource SmallTopBottomMargin}"
                FontSize="20"
                ItemsSource="{x:Bind Seasons}"
                SelectedItem="{x:Bind ViewModel.SeasonFilter, Mode=TwoWay}">
                <ctk:Segmented.ItemsPanel>
                    <ItemsPanelTemplate>
                        <uc:WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ctk:Segmented.ItemsPanel>
                <ctk:Segmented.ItemContainerStyle>
                    <Style TargetType="ctk:SegmentedItem">
                        <Setter Property="MinWidth" Value="200" />
                        <Setter Property="FontSize" Value="20" />
                    </Style>
                </ctk:Segmented.ItemContainerStyle>
            </ctk:Segmented>

            <AutoSuggestBox
                Grid.Row="1"
                Width="300"
                Height="35"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                PlaceholderText="Search"
                QueryIcon="Find"
                Text="{x:Bind ViewModel.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        </Grid>

        <ctk:SwitchPresenter
            x:Name="SwitchPresenter"
            Grid.Row="2"
            TargetType="x:Boolean"
            Value="{x:Bind ViewModel.IsLoading, Mode=OneWay}">
            <ctk:Case Value="True">
                <loadingviews:SeasonalCardGridLoadingView />
            </ctk:Case>
            <ctk:Case Value="False">
                <ItemsView
                    x:Name="AnimeListView"
                    IsItemInvokedEnabled="True"
                    SelectionMode="None"
                    ItemsSource="{x:Bind ViewModel.Anime}">
                    <ItemsView.ItemTemplate>
                        <DataTemplate x:DataType="cm:AnimeModel">
                            <ItemContainer>
                                <uc:AnimeCard
                                    x:Name="Card"
                                    Anime="{x:Bind}"
                                    DisplayMode="DetailedGrid">
                                    <uc:AnimeCard.Flyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem
                                                Command="{x:Bind root:App.Commands.UpdateTracking}"
                                                CommandParameter="{x:Bind}"
                                                Text="Update">
                                                <MenuFlyoutItem.Icon>
                                                    <SymbolIcon Symbol="PostUpdate" />
                                                </MenuFlyoutItem.Icon>
                                            </MenuFlyoutItem>
                                            <MenuFlyoutItem
                                                Command="{x:Bind root:App.Commands.Watch}"
                                                CommandParameter="{x:Bind}"
                                                Text="Watch">
                                                <MenuFlyoutItem.Icon>
                                                    <SymbolIcon Symbol="Video" />
                                                </MenuFlyoutItem.Icon>
                                            </MenuFlyoutItem>
                                        </MenuFlyout>
                                    </uc:AnimeCard.Flyout>
                                </uc:AnimeCard>
                            </ItemContainer>
                        </DataTemplate>
                    </ItemsView.ItemTemplate>
                    <ItemsView.Layout>
                        <UniformGridLayout
                            ItemsStretch="Fill"
                            MinColumnSpacing="15"
                            MinItemHeight="275"
                            MinItemWidth="500"
                            MinRowSpacing="15" />
                    </ItemsView.Layout>
                    <ItemsView.ItemTransitionProvider>
                        <LinedFlowLayoutItemCollectionTransitionProvider />
                    </ItemsView.ItemTransitionProvider>
                </ItemsView>
            </ctk:Case>
        </ctk:SwitchPresenter>

        <CommandBar
            Grid.Row="3"
            Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
            DefaultLabelPosition="Bottom">
            <AppBarElementContainer />
            <AppBarButton Icon="Refresh" Label="Refresh" />
            <AppBarButton Icon="View" Label="Display mode">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <RadioMenuFlyoutItem Icon="{ui:FontIcon Glyph=&#xf0e2;}" Text="Grid view" />
                        <RadioMenuFlyoutItem Icon="{ui:FontIcon Glyph=&#xf0e4;}" Text="List view" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Sort" Label="Sort">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <RadioMenuFlyoutItem
                            x:Name="PopularityRadio"
                            Command="{x:Bind ViewModel.SetSortCommand}"
                            CommandParameter="{x:Bind cm:Sort.Popularity}"
                            Text="Popularity" />
                        <RadioMenuFlyoutItem
                            x:Name="ScoreRadio"
                            Command="{x:Bind ViewModel.SetSortCommand}"
                            CommandParameter="{x:Bind cm:Sort.Score}"
                            Text="Score" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Filter" Label="Filter">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <RadioMenuFlyoutItem
                            x:Name="PrevFlyoutToggle"
                            Command="{x:Bind ViewModel.SetSeasonCommand}"
                            CommandParameter="prev"
                            Text="Previous" />
                        <RadioMenuFlyoutItem
                            x:Name="CurrentFlyoutToggle"
                            Command="{x:Bind ViewModel.SetSeasonCommand}"
                            CommandParameter="curr"
                            Text="Current" />
                        <RadioMenuFlyoutItem
                            x:Name="NextFlyoutToggle"
                            Command="{x:Bind ViewModel.SetSeasonCommand}"
                            CommandParameter="next"
                            Text="Next" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Grid>
</views:SeasonalPageBase>
