<v:UserListPageBase
    x:Class="Totoro.WinUI.Views.UserListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:b="using:Totoro.WinUI.Behaviors"
    xmlns:cm="using:Totoro.Core.Models"
    xmlns:ctk="using:CommunityToolkit.WinUI.Controls"
    xmlns:ctkl="using:CommunityToolkit.Labs.WinUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:help="using:Totoro.Core.Helpers"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    xmlns:loadingviews="using:Totoro.WinUI.LoadingViews"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:primitives="using:CommunityToolkit.WinUI.UI.Controls.Primitives"
    xmlns:root="using:Totoro.WinUI"
    xmlns:uc="using:Totoro.WinUI.UserControls"
    xmlns:uhelp="using:Totoro.WinUI.Helpers"
    xmlns:v="using:Totoro.WinUI.Views"
    xmlns:viewmodels="using:Totoro.Core.ViewModels"
    xmlns:ui="using:CommunityToolkit.WinUI" xmlns:torrentingsections="using:Totoro.WinUI.Views.TorrentingSections"
    Name="Page"
    Margin="{StaticResource MediumLeftRightMargin}"
    d:DataContext="{d:DesignInstance Type=viewmodels:UserListViewModel}"
    mc:Ignorable="d">
    <v:UserListPageBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/RadioButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <v:HumanizeConverter x:Key="HumanizeConverter" />
            <v:AiringStatusToBrushConverter x:Key="StatusConverter" />
            <torrentingsections:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <DataTemplate x:DataType="cm:AnimeModel" x:Key="GridTemplate">
                <ItemContainer>
                    <uc:AnimeCard
                                Margin="3"
                                Anime="{x:Bind}"
                                Command="{x:Bind root:App.Commands.AnimeCard}"
                                ContextFlyout="{x:Bind uhelp:Converters.AnimeToFlyout((cm:AnimeModel)), Mode=OneWay}" />
                </ItemContainer>
            </DataTemplate>
            <DataTemplate x:DataType="cm:AnimeModel" x:Key="TableTemplate">
                <ItemContainer>
                    <Expander ExpandDirection="Down" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <Expander.Header>
                            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">

                                <Rectangle Width="2" Fill="{x:Bind AiringStatus, Converter={StaticResource StatusConverter}}" Margin="0 0 10 0"/>

                                <StackPanel Orientation="Horizontal" Width="{x:Bind v:UserListPage.TableViewSettings.Columns[0].Width, Mode=OneWay}"
                                            Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[0].IsVisible), Mode=OneWay}">
                                    <TextBlock VerticalAlignment="Center"
                                            Text="{x:Bind Title}" TextTrimming="WordEllipsis"/>
                                    <uc:UnwatchedEpisodesBadge 
                                        VerticalAlignment="Center"
                                        Anime="{x:Bind}"
                                        Style="{ThemeResource AttentionValueInfoBadgeStyle}" 
                                        Margin="{StaticResource SmallLeftMargin}"/>
                                </StackPanel>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[1].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[1].IsVisible), Mode=OneWay}">
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Run Text="{x:Bind Season.SeasonName}" />
                                        <Run Text="{x:Bind Season.Year}" />
                                    </TextBlock>
                                </Grid>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[2].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[2].IsVisible), Mode=OneWay}">
                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Text="{x:Bind MeanScore}"/>
                                </Grid>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[3].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[3].IsVisible), Mode=OneWay}">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="{x:Bind help:AnimeHelpers.UserScore(Tracking), Mode=OneWay}"/>
                                </Grid>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[4].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[4].IsVisible), Mode=OneWay}">
                                    <StackPanel
                                            HorizontalAlignment="Center"
                                            Orientation="Horizontal"
                                            Spacing="10">
                                        <Button
                                            Padding="0"
                                            Command="{x:Bind root:App.Commands.DecrementTracking}"
                                            CommandParameter="{x:Bind}">
                                            <FontIcon FontSize="12" Glyph="&#xECC9;" />
                                        </Button>
                                        <TextBlock
                                            MinWidth="30"
                                            VerticalAlignment="Center"
                                            Text="{x:Bind help:AnimeHelpers.Progress(Tracking, TotalEpisodes), Mode=OneWay}"
                                            TextAlignment="Center" />
                                        <Button
                                            Padding="0"
                                            Command="{x:Bind root:App.Commands.IncrementTracking}"
                                            CommandParameter="{x:Bind}">
                                            <FontIcon FontSize="12" Glyph="&#xECC8;" />
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[5].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[5].IsVisible), Mode=OneWay}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Text="{x:Bind Tracking.StartDate, Converter={StaticResource HumanizeConverter}}"
                                        Grid.Column="5"/>
                                </Grid>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[6].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[6].IsVisible), Mode=OneWay}">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="{x:Bind Tracking.FinishDate, Converter={StaticResource HumanizeConverter}}"/>
                                </Grid>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[7].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[7].IsVisible), Mode=OneWay}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        Text="{x:Bind Tracking.UpdatedAt, Converter={StaticResource HumanizeConverter}}"/>
                                </Grid>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[8].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[8].IsVisible), Mode=OneWay}">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="{x:Bind Type}"/>
                                </Grid>

                                <Grid Width="{x:Bind v:UserListPage.TableViewSettings.Columns[9].Width, Mode=OneWay}"
                                      Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(v:UserListPage.TableViewSettings.Columns[9].IsVisible), Mode=OneWay}">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="{x:Bind NextEpisodeAt, Converter={StaticResource HumanizeConverter}, Mode=OneWay, ConverterParameter=1}" />
                                </Grid>

                            </StackPanel>
                        </Expander.Header>
                        <Expander.Content>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image
                                    Margin="10"
                                    Source="{x:Bind Image}"
                                    Stretch="None" />

                                <StackPanel
                                    Grid.Column="1"
                                    Padding="10"
                                    Spacing="10">

                                    <StackPanel>
                                        <TextBlock Text="{x:Bind EngTitle}" Style="{ThemeResource TitleTextBlockStyle}"/>
                                        <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Foreground="{ThemeResource TextFillColorTertiaryBrush}">
                                            <Run Text="("/>
                                            <Run Text="{x:Bind RomajiTitle}"/>
                                            <Run Text=")"/>
                                        </TextBlock>
                                    </StackPanel>

                                    <labs:TokenView ItemsSource="{x:Bind Genres}"
                                                    SelectionMode="None"
                                                    IsWrapped="True"/>

                                    <TextBlock Text="{x:Bind Description}" TextWrapping="WrapWholeWords" />
                                    
                                    <StackPanel Orientation="Horizontal" Spacing="10">
                                        <Button
                                            HorizontalAlignment="Stretch"
                                            Command="{x:Bind root:App.Commands.More}"
                                            CommandParameter="{x:Bind}">
                                            <Grid HorizontalAlignment="Stretch">
                                                <StackPanel
                                                      HorizontalAlignment="Stretch"
                                                      Orientation="Horizontal"
                                                      Spacing="10">
                                                    <SymbolIcon Symbol="More" />
                                                    <TextBlock Text="More Details" />
                                                </StackPanel>
                                            </Grid>
                                        </Button>
                                        <Button
                                             HorizontalAlignment="Stretch"
                                             Command="{x:Bind v:UserListPage.ViewInBrowser}"
                                             CommandParameter="{x:Bind}">
                                            <Grid HorizontalAlignment="Stretch">
                                                <StackPanel
                                                   HorizontalAlignment="Stretch"
                                                   Orientation="Horizontal"
                                                   Spacing="10">
                                                    <SymbolIcon Symbol="Globe" />
                                                    <TextBlock Text="View In Browser" />
                                                </StackPanel>
                                            </Grid>
                                        </Button>
                                        <Button
                                            HorizontalAlignment="Stretch"
                                            Command="{x:Bind root:App.Commands.UpdateTracking}"
                                            CommandParameter="{x:Bind}">
                                            <Grid HorizontalAlignment="Stretch">
                                                <StackPanel
                                                      HorizontalAlignment="Stretch"
                                                      Orientation="Horizontal"
                                                      Spacing="10">
                                                    <SymbolIcon Symbol="Edit" />
                                                    <TextBlock Text="Update Tracking" />
                                                </StackPanel>
                                            </Grid>
                                        </Button>
                                        <Button
                                            HorizontalAlignment="Stretch"
                                            Command="{x:Bind root:App.Commands.SetPreferences}"
                                            CommandParameter="{x:Bind Id}">
                                            <Grid HorizontalAlignment="Stretch">
                                                <StackPanel
                                                      HorizontalAlignment="Stretch"
                                                      Orientation="Horizontal"
                                                      Spacing="10">
                                                    <SymbolIcon Symbol="Setting" />
                                                    <TextBlock Text="Edit Preferences" />
                                                </StackPanel>
                                            </Grid>
                                        </Button>
                                        <SplitButton
                                            Command="{x:Bind root:App.Commands.Watch}"
                                            CommandParameter="{x:Bind}"
                                            Flyout="{x:Bind uhelp:Converters.GetProvidersFlyout((cm:AnimeModel)), Mode=OneWay}">
                                            <Grid>
                                                <StackPanel Orientation="Horizontal" Spacing="10">
                                                    <SymbolIcon Symbol="Video" />
                                                    <TextBlock>
                                                        <Run Text="Watch" />
                                                    </TextBlock>
                                                </StackPanel>
                                            </Grid>
                                        </SplitButton>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Expander.Content>
                    </Expander>
                </ItemContainer>
            </DataTemplate>
            <v:AnimeCollectionDataTemplateSelector GridTemplate="{StaticResource GridTemplate}"
                                                   TableTemplate="{StaticResource TableTemplate}"
                                                   x:Key="DataTemplateSelector"/>
        </ResourceDictionary>
    </v:UserListPageBase.Resources>

    <ctk:SwitchPresenter Value="{x:Bind ViewModel.ViewState, Mode=OneWay}">

        <!--  Loading Shimmer  -->
        <ctk:Case Value="{x:Bind viewmodels:ViewState.Loading}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ctkl:Shimmer
                    Width="800"
                    Height="50"
                    Margin="0,30"
                    HorizontalAlignment="Center"
                    CornerRadius="5" />

                <ctk:SwitchPresenter Value="{x:Bind Mode, Mode=OneWay}" Grid.Row="1">
                    <ctk:Case IsDefault="True" Value="{x:Bind cm:DisplayMode.Grid}">
                        <loadingviews:CardGridLoadingView/>
                    </ctk:Case>
                    <ctk:Case Value="{x:Bind cm:DisplayMode.List}">
                        <loadingviews:TableLoadingView/>
                    </ctk:Case>
                </ctk:SwitchPresenter>
            </Grid>
        </ctk:Case>

        <!--  Not logged into any tracking  -->
        <ctk:Case Value="{x:Bind viewmodels:ViewState.NotAuthenticated}">
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="30"
                    Text="Not connected to any Anime List service, Go to settings page to connect."
                    TextWrapping="Wrap">
                    <TextBlock.Foreground>
                        <SolidColorBrush Opacity="0.3" Color="White" />
                    </TextBlock.Foreground>
                </TextBlock>
            </Grid>
        </ctk:Case>

        <!--  List  -->
        <ctk:Case Value="{x:Bind viewmodels:ViewState.Authenticated}">
            <Grid x:Name="ContentArea">
                <Grid.RowDefinitions>
                    <RowDefinition Height="80" />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Margin="0,0,0,12" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <ctk:Segmented
                        Margin="{StaticResource SmallTopBottomMargin}"
                        ItemsSource="{x:Bind ViewModel.Statuses, Mode=OneWay}"
                        SelectedItem="{x:Bind ViewModel.Filter.ListStatus, Mode=TwoWay}">
                        <ctk:Segmented.ItemTemplate>
                            <DataTemplate x:DataType="cm:AnimeStatus">
                                <TextBlock Text="{x:Bind v:UserListPage.ToStatusString((cm:AnimeStatus))}" />
                            </DataTemplate>
                        </ctk:Segmented.ItemTemplate>
                        <ctk:Segmented.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ctk:WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ctk:Segmented.ItemsPanel>
                        <ctk:Segmented.ItemContainerStyle>
                            <Style TargetType="ctk:SegmentedItem">
                                <Setter Property="MinWidth" Value="200" />
                                <Setter Property="FontSize" Value="{StaticResource SubtitleTextBlockFontSize}" />
                            </Style>
                        </ctk:Segmented.ItemContainerStyle>
                    </ctk:Segmented>

                </Grid>

                <!--Table Header of Table View-->
                <Border Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(ViewModel.IsListView), Mode=OneWay}"
                        Background="{ThemeResource CardBackgroundFillColorSecondaryBrush}"
                        Padding="26 0 60 0"
                        Height="46"
                        CornerRadius="5"
                        Margin="0 4"
                        Grid.Row="1">
                    <ItemsControl ItemsSource="{x:Bind v:UserListPage.TableViewSettings.Columns, Mode=OneWay}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid x:Name="Container"
                                      Width="{Binding Width, Mode=TwoWay}"
                                      Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Style="{ThemeResource BodyStrongTextBlockStyle}"/>
                                    <ctk:ContentSizer HorizontalAlignment="Right"
                                              TargetControl="{Binding ElementName=Container}">
                                        <ctk:ContentSizer.RenderTransform>
                                            <TranslateTransform X="7"/>
                                        </ctk:ContentSizer.RenderTransform>
                                    </ctk:ContentSizer>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Border>

                <!--Anime List-->
                <ItemsView ItemsSource="{x:Bind ViewModel.Anime}"
                           SelectionMode="None"
                           Grid.Row="2"
                           x:Name="AnimeCollectionView"
                           ItemTemplate="{StaticResource DataTemplateSelector}" >
                    <ItemsView.ItemTransitionProvider>
                        <LinedFlowLayoutItemCollectionTransitionProvider />
                    </ItemsView.ItemTransitionProvider>
                </ItemsView>

                <!--Teaching Tips-->
                <Grid Grid.Row="2">
                    <TeachingTip
                        x:Name="GenresTeachingTip"
                        PreferredPlacement="Bottom"
                        IsLightDismissEnabled="True"
                        Target="{x:Bind GenresButton}">
                        <StackPanel Spacing="10">
                            <TextBlock Text="Filter by Genres" Style="{ThemeResource SubtitleTextBlockStyle}"/>
                            <labs:TokenView
                                x:Name="GenresView"
                                IsWrapped="True"
                                ItemsSource="{x:Bind ViewModel.Genres, Mode=OneWay}"
                                SelectionChanged="TokenView_SelectionChanged"
                                SelectionMode="Multiple" />
                        </StackPanel>
                    </TeachingTip>
                    <TeachingTip x:Name="GridViewSettingsTeachingTip"
                                 Target="{x:Bind AppearanceButton}"
                                 IsLightDismissEnabled="True"
                                 ActionButtonContent="Reset To Defaults"
                                 ActionButtonClick="ResetGridView"
                                 CloseButtonContent="Close">
                        <TeachingTip.Content>
                            <StackPanel Spacing="10" Width="550">
                                <TextBlock Text="Appearance" Style="{ThemeResource SubtitleTextBlockStyle}"/>
                                <ctk:SettingsCard Description="indicates how items are sized to fill the available space."
                                                  Header="Items Stretch">
                                    <ComboBox ItemsSource="{ui:EnumValues Type=cm:LayoutItemsStretch}"
                                              SelectedItem="{x:Bind ViewModel.GridViewSettings.LayoutItemsStrech, Mode=TwoWay}"/>
                                </ctk:SettingsCard>
                                <ctk:SettingsCard Description="indicates how items are aligned on the non-scrolling or non-virtualizing axis."
                                                  Header="Items Justification">
                                    <ComboBox ItemsSource="{ui:EnumValues Type=cm:LayoutItemJustification}"
                                              SelectedItem="{x:Bind ViewModel.GridViewSettings.LayoutItemJustification, Mode=TwoWay}"/>
                                </ctk:SettingsCard>
                                <ctk:SettingsCard Description="describes how an Image should be stretched to fill the destination rectangle"
                                                  Header="Image Stretch"
                                                  HeaderIcon="{ui:FontIcon Glyph=&#xE8B9;}">
                                    <ComboBox ItemsSource="{ui:EnumValues Type=cm:ImageStretch}"
                                              SelectedItem="{x:Bind ViewModel.GridViewSettings.ImageStretch, Mode=TwoWay}"/>
                                </ctk:SettingsCard>
                                <ctk:SettingsCard Description="Value -1 means auto calculate number of columns based on item height and width"
                                              Header="Max Number of Columns"
                                              HeaderIcon="{ui:FontIcon Glyph=&#xF0E2;}">
                                    <NumberBox
                                    Maximum="20"
                                    Minimum="-1"
                                    SpinButtonPlacementMode="Inline"
                                    Value="{x:Bind ViewModel.GridViewSettings.MaxNumberOfColumns, Mode=TwoWay}" />
                                </ctk:SettingsCard>
                                <ctk:SettingsCard Header="Item Height" HeaderIcon="{ui:FontIcon Glyph=&#xE76F;}">
                                    <NumberBox
                                    Minimum="100"
                                    SpinButtonPlacementMode="Inline"
                                    Value="{x:Bind ViewModel.GridViewSettings.ItemHeight, Mode=TwoWay}" />
                                </ctk:SettingsCard>
                                <ctk:SettingsCard Header="Desired Item Width" HeaderIcon="{ui:FontIcon Glyph=&#xE784;}">
                                    <NumberBox
                                    Minimum="100"
                                    SpinButtonPlacementMode="Inline"
                                    Value="{x:Bind ViewModel.GridViewSettings.DesiredWidth, Mode=TwoWay}" />
                                </ctk:SettingsCard>
                                <ctk:SettingsCard Header="Spacing Between Items" HeaderIcon="{ui:FontIcon Glyph=&#xF573;}">
                                    <NumberBox
                                    Maximum="20"
                                    Minimum="0"
                                    SpinButtonPlacementMode="Inline"
                                    Value="{x:Bind ViewModel.GridViewSettings.SpacingBetweenItems, Mode=TwoWay}" />
                                </ctk:SettingsCard>
                            </StackPanel>
                        </TeachingTip.Content>
                    </TeachingTip>
                </Grid>

                <!--  Bottom Command Bar  -->
                <Grid Grid.Row="3" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <CommandBar
                        HorizontalAlignment="Left"
                        DefaultLabelPosition="Right"
                        IsDynamicOverflowEnabled="False">
                        <AppBarElementContainer Padding="10,7,0,7">
                            <AutoSuggestBox
                                Width="300"
                                VerticalAlignment="Center"
                                PlaceholderText="Title"
                                QueryIcon="Find"
                                Text="{x:Bind ViewModel.Filter.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </AppBarElementContainer>
                        <AppBarElementContainer Padding="10,7,7,7">
                            <TextBox PlaceholderText="Year" Text="{x:Bind ViewModel.Filter.Year, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </AppBarElementContainer>
                        <AppBarButton
                            x:Name="GenresButton"
                            Icon="Tag"
                            Label="Genres" />
                        <AppBarButton Icon="Calendar" Label="Airing Status">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <RadioMenuFlyoutItem
                                        Click="AiringStatusClicked"
                                        IsChecked="True"
                                        GroupName="AiringStatus"
                                        Text="All" />
                                    <RadioMenuFlyoutItem
                                        Click="AiringStatusClicked"
                                        GroupName="AiringStatus"
                                        Tag="{x:Bind cm:AiringStatus.CurrentlyAiring}"
                                        Text="Currently airing" />
                                    <RadioMenuFlyoutItem
                                        Click="AiringStatusClicked"
                                        GroupName="AiringStatus"
                                        Tag="{x:Bind cm:AiringStatus.NotYetAired}"
                                        Text="Not yet aired" />
                                    <RadioMenuFlyoutItem
                                        Click="AiringStatusClicked"
                                        GroupName="AiringStatus"
                                        Tag="{x:Bind cm:AiringStatus.FinishedAiring}"
                                        Text="Finished airing" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                    </CommandBar>

                    <CommandBar
                        Grid.Column="1"
                        DefaultLabelPosition="Right"
                        IsDynamicOverflowEnabled="False">
                        
                        <AppBarButton Label="Columns" Visibility="{x:Bind uhelp:Converters.BooleanToVisibility(ViewModel.IsListView), Mode=OneWay}">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xE8B3;" />
                            </AppBarButton.Icon>
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[1].IsVisible, Mode=TwoWay}" Text="Season" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[2].IsVisible, Mode=TwoWay}" Text="Average Score" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[3].IsVisible, Mode=TwoWay}" Text="User Score" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[4].IsVisible, Mode=TwoWay}" Text="Tracking" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[5].IsVisible, Mode=TwoWay}" Text="Date Stared" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[6].IsVisible, Mode=TwoWay}" Text="Date Completed" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[7].IsVisible, Mode=TwoWay}" Text="Last Updated" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[8].IsVisible, Mode=TwoWay}" Text="Type" />
                                    <ToggleMenuFlyoutItem IsChecked="{x:Bind v:UserListPage.TableViewSettings.Columns[9].IsVisible, Mode=TwoWay}" Text="Next Episode" />
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem Text="Reset columns" Click="ResetColumns"/>
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>

                        <AppBarButton Label="Appearance" Visibility="{x:Bind uhelp:Converters.InvertedBooleanToVisibility(ViewModel.IsListView), Mode=OneWay}"
                                      x:Name="AppearanceButton">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xf0e2;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        
                        <AppBarButton
                            x:Name="SortButton"
                            Icon="Sort"
                            Label="Sort">
                            <AppBarButton.Flyout>
                                <MenuFlyout x:Name="SortingFlyout">
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortProperty}"
                                        CommandParameter="Title"
                                        GroupName="1"
                                        Text="Title" />
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortProperty}"
                                        CommandParameter="Mean Score"
                                        GroupName="1"
                                        Text="Average" />
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortProperty}"
                                        CommandParameter="User Score"
                                        GroupName="1"
                                        Text="Score" />
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortProperty}"
                                        CommandParameter="Date Started"
                                        GroupName="1"
                                        Text="Date Started" />
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortProperty}"
                                        CommandParameter="Date Completed"
                                        GroupName="1"
                                        Text="Date Completed" />
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortProperty}"
                                        CommandParameter="Last Updated"
                                        GroupName="1"
                                        Text="Last Updated" />
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortProperty}"
                                        CommandParameter="Next Episode"
                                        GroupName="1"
                                        Text="Next Episode" />
                                    <MenuFlyoutSeparator />
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortOrder}"
                                        GroupName="2"
                                        Text="Ascending">
                                        <RadioMenuFlyoutItem.CommandParameter>
                                            <x:Boolean>True</x:Boolean>
                                        </RadioMenuFlyoutItem.CommandParameter>
                                    </RadioMenuFlyoutItem>
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind ViewModel.SetSortOrder}"
                                        GroupName="2"
                                        Text="Descending">
                                        <RadioMenuFlyoutItem.CommandParameter>
                                            <x:Boolean>False</x:Boolean>
                                        </RadioMenuFlyoutItem.CommandParameter>
                                    </RadioMenuFlyoutItem>
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        
                        <AppBarButton
                            x:Name="QuickAdd"
                            Icon="Add"
                            Label="Quick Add" />
                        
                        <AppBarButton
                            Command="{x:Bind ViewModel.RefreshCommand}"
                            Icon="Refresh"
                            Label="Refresh" />
                        
                        <AppBarButton Icon="View" Label="Display mode">
                            <AppBarButton.Flyout>
                                <MenuFlyout x:Name="DisplayModeFlyout">
                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind SetDisplayMode}"
                                        CommandParameter="{x:Bind cm:DisplayMode.Grid}"
                                        GroupName="Display Mode"
                                        Text="Grid view"
                                        Icon="{ui:FontIcon Glyph=&#xf0e2;}"/>

                                    <RadioMenuFlyoutItem
                                        Command="{x:Bind SetDisplayMode}"
                                        CommandParameter="{x:Bind cm:DisplayMode.List}"
                                        GroupName="Display Mode"
                                        Text="Table view"
                                        Icon="{ui:FontIcon Glyph=&#xf0e4;}"/>
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                    </CommandBar>

                </Grid>

            </Grid>
        </ctk:Case>
    </ctk:SwitchPresenter>
</v:UserListPageBase>
